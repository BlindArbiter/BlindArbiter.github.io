[{"title":"VS踩坑","path":"/2023/10/11/231011 VS踩坑/","content":"随机掉落更新😴 中文编码问题解决方法在使用VS运行程序的时候会报这样的错，”常量中有换行符”，运行之后是这样的乱码的。 从顶栏当中选择工具-自定义，再切去命名栏，把菜单栏那一项改成文件后，选择添加命令。 在添加命令的界面，类别选文件，命令选择高级保存选项，然后确定，把这个命令添加上去。 再从顶栏的文件当中找到我们刚刚添加好的高级保存选项。 把编码方式换成另一种中文的，例如我的本来是EUC的那个简体中文，就换成GB2312的简体中文，换完之后编码就没问题了。 “cout” 不明确 将using namespace std; 删除后Ctrl+S保存cpp文件，再加上using namespace std; 保存cpp文件就解决了。","tags":["VS"],"categories":["踩坑"]},{"title":"Qt乱谈","path":"/2023/09/09/230909 Qt/","content":"一些我学到的我用到的且跟C++有区别的地方 先说Qt，一个完全面向对象的C++图形用户界面应用程序框架 试图驯化Qt简单地开发个小游戏，程序到今天算是收尾了🧐 1、QDubug一个调试输出功能的库 123#include &lt;QDebug&gt; --声明头文件//输出的一种最常用格式qDebug()&lt;&lt;&quot;score:&quot;&lt;&lt;score; 2、 对象树 QObject是以对象树的形式组织起来的 当我们创建一个QObject对象时，可以设置这个对象的父对象parent，这个被创建的对象会自动添加到其父对象的children()列表里（注意此父对象非继承意义上的父类） 当父对象析构的时候，其children()列表中的所有对象也会被析构 QWidget是能够在屏幕上显示的一切组件的父类 局部对象的析构顺序按照其创建顺序的相反过程 3、信号与槽12connect(sender, signal, receiver, slot)connect(信号发送者, 发送的具体信号, 信号接受者, 信号的处理(槽函数)) 优点：松散耦合，信号发送端和接收端本身无关联，通过connect连接耦合。 信号和槽函数返回值是 void 信号只需要声明，不需要实现，槽函数既要声明也需要实现 断开信号 disconnect() 3.1、自定义信号和槽 自定义信号：emit发送信号—— emit 对象指针-&gt;信号() 信号槽要求信号和槽的参数一致，所谓一致，是参数类型一致。 重载冲突：连接带参数的 信号与槽 需要利用函数指针 -&gt; 明确指向的函数地址 1234void(类1:: *函数指针1)(所带参数类型) = &amp;类1::信号1;void(类2:: *函数指针2)(所带参数类型) = &amp;类2::信号2;connect(sender, signal, receiver, slot);调用自定义信号函数Func(); 12345678910// 无参信号和槽连接void(Teacher:: *teacherSignal)(QString) = &amp;Teacher::signal1;void(Student:: *studentSlot)(QString) = &amp;Student::slot1;connect(ls,teacherSignal,xs,studentSlot);Func();// 按钮控制信号和槽 QPushButton * btn = new QPushButton(&quot;下课&quot;,this)connect(btn,&amp;QPushButton::clicked,this,&amp;Widge::Func)// 信号连接信号connect(btn,&amp;QPushButtomn,ls,teacherSignal) 3.2、lambda表达式用于定义和创建匿名的函数对象 12[函数对象参数](操作符重载函数参数)mutable-&gt;返回值&#123;函数体&#125;// 其中 mutable 看需求是否添加 函数对象参数 [] 标识一个lambda的开始，不能省略 [] 没有使用任何函数对象参数 [=] 可使用lambda所在范围内所有可见的局部变量，值传递 [&amp;] 可使用lambda所在范围内所有可见的局部变量，引用传递 [this] 函数体内可使用lambda所在类中的成员变量 [a] a按值传递，默认函数是const [&amp;a] a按引用传递 4、定时器 利用事件 123456789void timerEvent(QTimeEvent * ev);//启动定时器startTimer(1000) // 参数1 间隔 单位毫秒// 多个定时器id1 = startTimer(1000)if(ev-&gt;timerId()==id1)&#123; // 判断唯一标示 static int num = 1; ui-&gt;label-&gt;setText(QString::number(num++));&#125; 利用定时器类 QTimer 123456789101112// 创建定时器对象QTimer * timer()&#123; // 启动定时器 timer-&gt;start(1000); // 停止定时器\t// timer-&gt;stop(); // 发送timeout信号监听，lambda匿名函数实现 connect(timer, QTimer::timeout, [=]()&#123; static int num = 1; ui-&gt;label-&gt;setText(QString(num++)); &#125;)&#125; 5、QPainter 绘图事件12345678// 声明绘图事件void paintEvent(QPainEvent *);// 实例化画家对象 this指的绘图设备QPainter painter(this);// 画图片painter.drawPixmap(int x,int y,int w,int h,const QPixmap &amp;pm);painter.drawPixmap(QRect(int x,int y,int w,int h),const QPixmap &amp;pm);// 如果要手动调用绘图事件，可用update() 6、QVector 容器(动态数组)1vector&lt;数据类型*&gt; 容器名 12vector&lt;类1 *&gt; vector1; // 装类1的容器vector1vector&lt;类1 *&gt;::iterator it; // 名为it的迭代器，可遍历和操作容器 遍历和操作容器 1234for(it=vector1.begin();it!=vector1.end();)&#123; if((*it)-&gt;done())&#123; it=vector1.erase(it); &#125; erase()：从容器中删除指定位置的元素，并返回指向被删除元素之后位置的迭代器 7、QSound 音乐音效12345// 在导入QSound时，需要先在 .pro工程文件中加入QT += multimedia// #include&lt;QSound&gt; 1QSound::play(音乐); 数据类型转换 QString -&gt; char *： 12// 先转成 QByteArray [.toUtf8()] 再转成 char * [ .data()]qDebug() &lt;&lt; str1.toUtf8().data(); 子类—&gt;父类： 123// 强制类型转换符static_cast// 例如父类QEvent * e, 子类QMouseEvent * evQMouseEvent * ev = static_cast&lt;QMouseEvent *&gt;(e); 一些报错0x01 No rule to make target ‘……’, needed by ‘……’. Stop.这个报错可能是 .pro 文件里面有重复的头文件，删除掉重修构建就好了 0x02 The inferior stopped because it received a signal from the operating system. 这个报错通常是由于访问无效的内存地址引起的，会使得程序异常结束，后来回去看代码找到这个我释放了空间但是又试图访问的地方改掉就好了","tags":["Qt"],"categories":["编程相关"]},{"title":"MySQL踩坑笔记","path":"/2023/07/09/230709 MySQL踩坑/","content":"不定期更新😴 上次在Unity里接数据库用的是SQLite，这次试着用用MySQL MySQL Connector NET 卸载问题因为打算在VS里引用MySQL.Data.dll，于是下载了connector8.0.25，但是VS报错说不支持， 打算卸掉换一个版本，尝试过控制面板删除、火绒粉碎、注册表删除，但是都卸不掉😕 微软的支持里有个Fix problems that block programs from being installed or removed - Microsoft Support，点击下载卸载疑难解答程序； 如果下载的时候浏览器显示这类文件可能会损害你的设备的话，可以换一个浏览器下载，之后打开选择卸载掉Connect NET就好了，其他应用有相同情况也可以用这个","tags":["MySQL"],"categories":["踩坑","数据库"]},{"title":"Git踩坑笔记","path":"/2023/06/28/230628 Git踩坑/","content":"不定期随机掉落更新😴 2023 年 7 月 3 日最近在用Git管理项目，又多踩了些坑2023 年 6 月 20 日尝试用Git项目协作，版本控制，就记一些踩坑 一些指令 添加文件到暂存区：全部git add . / 指定git add 文件名.后缀 提交修改：git commit -m &quot;备注(可省)&quot; 推送代码到仓库：git pull 推送代码到远程仓库：git pull origin 想要推送的分支名 获取更新：git push 本地新建分支：git branch 新分支名字 本地删除分支：git branch -d 分支名字 查看本地分支：git branch 查看远程分支：git branch -r 查看所有分支：git branch -a 查看本地分支与远程分支的映射关系：git branch -vv 列出所有与当前Git仓库关联的远程仓库及URL：git remote -v 0x01 OpenSSL SSL_read: Connection was reset, errno 10054 报错原因是我们的DNS被污染了，国内ping到的github.com可能是被篡改了，我们重新配置正确的ip就好了 查询下面三个github相关域名ip：域名查询网址IPAddress.com 123github.comgithub.global.ssl.fastly.netcodeload.Github.com 打开C:\\Windows\\System32\\drivers\\etc\\hosts，如果有的话检查域名是否正确，如果没有的话在末尾加上刚刚查的ip地址和域名，格式像这样： 需要注意的是我们每次连不上可能就要改一遍ip地址，旧的地址要不就删掉要不就注释掉 cmd刷新DNS：ipconfig /flushdns 0x02 There is no tracking information for the current branch. Please specify which branch you want to merge with. 在协作项目使用git pull出现的问题，因为本地的分支和远程的分支没有建立关联导致的 1git branch --set-upstream-to=origin/远程分支名 本地分支名 再通过 git branch -vv 查看是否追踪成功 撤销本地分支和远程分支的关系： 1git branch --unset-upstream 0x03 refusing to merge unrelated histories这个我是在使用git pull出现的问题，我认为应该是两个分支不同导致的，在后面加上--allow-unrelated-histories 允许合并就能更新下来 1git pull --allow-unrelated-histories 不过使用这条指令后会进入一个如下图所示的界面： 可以直接关闭退出，反正已经更新好了，也可以在键盘上按INS键切换模式，可以在窗口最下面那行看到，切换到“insert”模式后按ESC键，输入 :wq 回车就会退出回到原来的界面。 0x04 error: ‘…/‘ does not have a commit checked out报错原因是文件下面有隐藏文件，删掉就好了 0x05 git push 时出现的 Everything up-to-date在git push之前必须要先 git commit -m &quot;&quot; 0x06 Timed out 一般像上面两种报错报错方式，问题在Git 所设端口与系统代理不一致 可以选择关闭http/https网络代理 12git config --global --unset http.proxygit config --global --unset https.proxy 或者重新配置代理 12git config --global http.proxy http://127.0.0.1:自己的端口号git config --global https.proxy http://127.0.0.1:自己的端口号","tags":["Git"],"categories":["踩坑"]},{"title":"Unity在Android中接入SQLite数据库","path":"/2023/03/29/230329 Unity在Android中接入SQLite数据库/","content":"如题，一个新的尝试 第一次参与写一个安卓项目，第一次使用Unity和Android Studio，第一次学习及编写C#脚本，第一次使用SQLite Manager…… 这个项目陆陆续续写了快一个月了，终于收尾了，记录一个踩坑最多、印象最深的板块 Android Studio 连接超时 改URL，改成阿里云的镜像 在Gradle目录下的build.gradle中Google()和jcenter()中间增加 1maven&#123; url ‘http://maven.aliyun.com/nexus/content/groups/public/’&#125; 当时还修改了Project Structure的一些Module属性，比如SDK版本、build Tool版本等，不知道这个有没有影响 创建Unity-安卓工程的密钥文件unity-project setting-player里创建密钥，保存到特定的文件夹里 创建完密钥之后，在下面project Key选择刚才新建的密钥并且填写密码 cmd打开jdk所在的bin文件夹，或者通过配置java/jdk的环境变量再直接cmd 1keytool -genkey -alias 秘钥库名称 -keyalg RSA -validity 有效时间 -keystore 秘钥库文件名 在bin文件生成testuse文件，将其剪切到刚刚创建秘钥的文件夹里 安卓项目调用java脚本 新建一个AS项目，专门用来调试java脚本 切换到Android栏，在app文件夹上创建一个新的module 切换到project时，就可以看到刚刚新建的module 然后在module的src/main/java/com.example.模块名的文件夹里新建一个Java类文件 在这个Java文件里写静态方法 写完方法后，右键文件找到Show in Explorer，就在文件夹中显示这个java文件，复制到unity的project里Assets下新建的Plugins/libs文件夹 SQLite Manager我在Google拓展里用了两个插件，一个是原本的”SQLite Manager”，另一个是”适用于Google Chrome的SQLite Manager”，由于后者的帮助文档我打不开，所以我是结合着两个插件摸索出SQLite语法的。 这就要说说很奇怪的Google SQLite Manager了，它建表有模板，但是它建不成表，它会说无法识别”CREATE”，改过好多次都不行，遇到困难睡大觉 转战SQLite Manager，同样的语法，怎么人家就建出来了，Google SQLite Manager你看看人家 Unity使用SQLite数据库 dll文件和so文件 针对sqlite3：①Mono.Data.Sqlite.dll、②sqlite3.dll 针对发布Android平台：③System.Data.dll、④libsqlite3.so 在Asset/Plugins里加入三个dll，其中①③可在Unity编辑器文件夹\\Editor\\Data\\MonoBleedingEdge\\lib\\mono\\unityjit里复制过去，②在SQLite官网下载，找Precompiled Binaries里相应电脑配置的文件下载，注意从不是Android版本 在Asset/Plugins/里创建Android文件夹，把libsqlite3.so放其中 dll和so的配置 Mono.Data.Sqlite.dll 和 sqlite3.dll：Any Platform System.Data.dll 和 libsqlite3.so：Android 都只勾选Android，因为PC环境不需要，勾选全平台的话会报错 libsqlite.so文件还要在下面的Platform settings选择ARMv7 更改完记得应用插件 Load at Startup 将建好的数据库文件放入Asset/StreamingAssets里 C# 使用命名空间using Mono.Data.Sqlite写代码即可 注意Android端需要拷贝数据库文件在我写完调用数据库代码并且真机调试时，我发现在unity上可以正常使用的登录系统，在安卓端上无法正常运行😢 这其实是因为：移动端是不能读写StreamingAssets路径下的文件的，但是会打包到安装包中，所以我们要把StreamingAssets中的数据库拷贝到持久化PersistentDataPath路径中 看到说可以用WWW类复制数据库文件，好的开始学习写完脚本之后，unity给我报错说WWW已经过期了，建议使用WebRequest😅 好的开始重新学习语法又被弃用了，无所谓，这个简单，换一下就好了 C# —跟SQLite数据库相关部分 using Mono.Data.Sqlite; 开头声明使用模块 主要使用的数据库三个类 SqliteConnection：创建与特定数据库的连接 SqliteCommand：针对数据库执行SQL语句 SqliteDataReader：从数据源读取数据流 连接数据库 12345678910111213private SqliteConnection con;private SqliteCommand command;private void DataBaseInit()&#123; //数据库路径字符串,注意最后的文件要改成自己的数据库文件名 path = &quot;Data Source = &quot; + Application.streamingAssetsPath + &quot;/users.db&quot;; //实例化连接对象 con = new SqliteConnection(path); //打开数据库文件 con.Open(); //创建指令对象 command = con.CreateCommand();&#125; 使用数据库指令 12//command.CommandText = &quot;SQL指令&quot;command.CommandText = &quot;Select * From users Where name=&#x27;&quot;+ UserInput.text+&quot;&#x27;&quot;; 接受、更新数据 ExecuteScalar() 只返回一个值，主要用来接收数据，如返回的密码 ExecuteNonQuery() 主要用来更新数据，通常使于执行Update、Insert和Delete语句 存档、删档 12PlayerPrefs.SetString(&quot;数据名&quot;, 数据);PlayerPrefs.DeleteAll(); WebRequest using UnityEngine.Networking; 创建连接 12var uri = new System.Uri(地址);UnityWebRequest www =UnityWebRequest.Get(uri); 获取传输的文本 1www.downloadHandler.text 打包安卓apk文件在打包之前可以把手机跟电脑用数据线连上，不然就会报这样的错误😅 用的小米手机，一开始找不到手机里的开发者模式，没关系我会变魔术设置-我的设备-全部参数：点击MIUI五次就可以进入开发者模式，设置里也会多了开发者模式选项 一定要打开USB调试还有USB安装，不然会给你拦截😮 之后打开Build Setting，先把Run Device刷新之后改成自己的安卓设备，在下方找Export选择一个安装调试文件的路径，注意这个路径不要含有中文，等安装好之后就可以点击旁边的Bulid and Run安装到手机里了 很奇怪的是，这个打包我就成功了一次之后，想着做完修改了删掉apk再重新打包的时候，unity显示的是打包成功，安卓设备上也显示连接上问我是否安装，但是apk却安装不到我的手机上😢 无所谓，我会换一台安卓设备测试的时候，没有删除第一次打包的再安装一个新的也是OK的，尝试让其他兄弟给我打个包让我试试装装，就有了这段报错，应该是因为我们这是个协作项目，我在unity的签名跟给我打这个包的兄弟不同，所以失败。 Unity其他报错成就收集栏目笑死了，对于刚接触unity的新手来说，就是见一个报错一个新鲜，跟成就收集似的🧐报错太多了，我也筛一筛，像什么脚本语法错误之类的我是没脸放上来的🤥，记一些显得比较有含金量或者比较有意思的报错。 Loading assembly failed: “Assets/Plugins/Mono.Data.Sqlite.dll” reason: File does not contain a valid CIL image 应该是导入的dll和unity内部编译器的target版本应该有差异，从网上下载dll文件也仅仅是适用于分享者的文件，最好还是按照上面讲过的路径，Unity编辑器下的Editor\\Data\\MonoBleedingEdge\\lib\\mono\\unityjit SqliteException: SQLite error no such table 这个问题应该是C#写数据库路径文件名没写对，或者是streamingAsset文件夹里没有数据库文件 1path = &quot;Data Source = &quot; + Application.streamingAssetsPath + &quot;/unity_users.db&quot;; 连踩两坑😶 一次是文件后缀名写成了.sqlite，导致后来运行脚本的时候，Unity给我新建了一个unity_users.sqlite文件，当时我以为是Unity给我自动配置的文件所以没有管😓，我反思，不该不管的 第二次是改对了路径之后运行，给我报我的文件不是数据库的错误（别问为什么没有截图，问就是忘了）是的，我给忘记了，我只接触过MySQL，所以当时用的就是MySQL写的数据库文件，但是我用的SQLite接的Unity，（其实在报错之前我都还觉得MySQL和SQLite没什么区别）所以无非两个选择，一个是重新写C#脚本，改用MySQL接，另一个是写一个SQLite数据库文件。当然选择容易实现一点的，不就是学一下用SQLite Manager😴。 Sqlite Error: SQLite error no such column在插入数据到数据库时，注意Varchar类型的，在传入数据的时候要插入引号 1&quot;&#x27;&quot; + 你要插入的数据 + &quot;&#x27;&quot; error CS0234：The type or namespace name“xxx“does not exist in the namespace“yyy“打包的时候报的错，我记得我当时吧Project Settings/Player/Android/Other Settings/Configuration/Api Compatibility Level*的.Net文件换成另外一个就好了 新奇的乱码错误(?)这么清新脱俗的报错一定不是我这种刚接触unity的废物能看懂的对吧，不记得改了哪步导致的，无所谓，我会选择不保存然后重开😴","tags":["Unity","Android","SQLite"],"categories":["踩坑","数据库"]},{"title":"MySQL注册表迁移和两种服务模式的切换","path":"/2023/03/25/230325 MySQL的迁移和两种连接服务/","content":"二战MySQL 故事背景是我在MySQL里建立的数据库不能和data文件夹同步，这可能是我的MySQL走的网络服务连接，也可能是my.ini配置文件没写明白，总之我把MySQL切换到本地服务连接模式之后就能同步了。所以试试切换成数据库本地连接，刚好因为C盘空间真的不够，想着说顺便一块将MySQL迁移到别的盘。 修改MySQL及数据存放位置C盘空间不足人必修课之一 停止mysql服务 本地服务：net stop mysql 网络服务：本地控制面板/管理工具/服务，或者win+r输入services.msc，找到mysql服务右键停止 其实本地服务和网络服务都可以在服务面板里打开或停止 转移数据文件，换盘放 修改新地址文件中的my.ini文件 主要改这两条，改成新地址 12basedir=E:\\lenovo\\MySQL\\MySQL Server 8.0datadir=E:\\lenovo\\MySQL\\MySQL Server 8.0\\data 修改注册服务 cmd输入regedit进入注册表编辑器 打开HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/MySQL文件夹 选择ImagePath，指定所修改的my.ini位置 比如我的新地址是–defaults-file=”E:\\lenovo\\MySQL\\MySQL Server 8.0\\my.ini” 服务启动 本地服务：net start mysql 网络服务：服务面板打开mysql网络服务 查看数据库文件存储位置由于我当时要接入数据库信息，但是找不到文件在哪，这个时候可以在mysql里输入下面命令，会返回位置：(这个时候我还是网络服务连接的数据库) 1show global variables like &quot;%datadir%&quot;; Data目录初始化打开mysql文件夹发现，我的文件夹里根本没有Data文件夹😶 没有？那就初始化目录一下 用管理员的身份在终端念出下面的咒语，如果没有报错的话，data文件夹就会现身了 12mysqld --initializemysqld --no-defaults --initialize` 启动MySQL本地系统连接服务123mysqld -install //注册net start mysql //启动net stop mysql //停止 去查了一下，大部分说的是my.ini配置文件没写明白，可是问题来了，我的mysql8根目录下找不到my.ini文件😶 试过一些方法，还是找不到my.ini（后来知道了怎么勾选查看隐藏文件，不过无所谓，我会新建文件覆盖），我自己建一个my.ini，然后再试试： 好的，直接被拒绝😢 MySQL有分本地系统连接和网络服务连接，大胆推测应该是只能使用一种连接方式连接(?) 我上面的失败是建立在我已经连接了网络服务之后的，在我关闭了网络服务的mysql80之后，就能连接上了 用管理员身份打开终端输入 1mysqld --initialize --console 我根据使用命令之后返回的信息，修改了my.ini文件，然后粉碎掉旧data文件，再重复执行上面的命令，直到不报错，出现A temporary password is generated for root@localhost:xxx 这个是本地系统给你设定的mysql处初始随机密码，一定要记下来！（不然一直密码错误无法登录mysql） 之后mysql -uroot -p随机密码，诶，连上了！ 一些踩坑ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.连上mysql之后，测试使用mysql命令的时候又双叒叕给我报错了，OK这题我会，因为是给的是初始随机密码，所以肯定要设置一个新密码 1set password=&#x27;你的新密码&#x27;; ERROR 2003 (HY000): Can’t connect to MySQL server on ‘localhost:3306’ (10061) 见过好几次这个报错，我推测这个报错应该就是没接上mysql服务(?) 上面第一张图应该是昨天连接数据库太频繁了，给我卡住了，连不上(?) 第二张是今天特地重启了一次电脑才开始连接，就莫名其妙地，成功了 ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: YES)这个大概率是密码问题，这条报错最后面写（using password：NO）的话就是没输入密码(using password: YES)大概率就是密码错误了 主要是之前我一直用的网络连接，现在转成了本地连接，没想到系统会给我初始随机密码，所以我就是一直输入旧密码一直报错😢 ERROR MySQL服务启动后停止 这个大概就是昨天操作太频繁了，我一会连接一会又停止它，它大概是不开心了，给我发黄牌警告呢🤐 总结就是重启大法好。 my.ini配置文件比较多的说法是可以从mysql文件夹里点开查看部分，勾选查看隐藏的项目就能看到my,ini文件，但是我当时没找到，所以是新建my.ini文件覆盖旧文件来解决的问题 我用的是mysql8，根据mysqld --initialize --console返回的信息修改了我原本的my.ini文件 提一些需要注意的点： 1234567891011121314151617181920[mysqld]port=3306# 设置mysql的安装目录及data数据存放目录，注意这里要修改成自己mysql的路径及想要存放data的路径basedir=E:\\lenovo\\MySQL\\MySQL Server 8.0datadir=E:\\lenovo\\MySQL\\MySQL Server 8.0\\data# 旧的服务端使用的字符集为utf8(utfmb3),新版本及未来版本为utf8mb4character-set-server=utf8mb4# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB# default_authentication_plugin 功能已弃用; default_authentication_plugin=mysql_native_password# --ssl=off 也弃用了,新版本可以用下面的语句代替;--tls-version=invalid[mysql]# 设置mysql客户端默认字符集，同理default-character-set=utf8mb4[client]# 设置mysql客户端连接服务端时默认使用的端口port=3306default-character-set=utf8mb4","tags":["MySQL"],"categories":["踩坑","数据库"]},{"title":"JavaScript—基础","path":"/2023/03/18/230318 JavaScript基础/","content":"之前为了找bug浅浅地接触一下的JS JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言。被广泛的应用于Web开发。 写JavaScript的位置： 页面script标签 &lt;script&gt;js代码&lt;/script&gt; （推荐）&lt;script language=&quot;javascript&quot;&gt;js代码&lt;/script&gt; js脚本没有固定位置 外部脚本引入（推荐） 创建：xxx.js引入：&lt;script src=&quot;路径/xxx.js&quot;&gt;&lt;/script&gt; 标签属性中（不常用，不推荐） &lt;div onclick=&quot;js代码&quot;&gt;&lt;/div&gt; 一、变量声明123var x = 10; //不做声明的时候默认var，重复定义会覆盖，存在变量覆盖变量污染问题。(不推荐)let y = 10; //使用let关键词定义一个变量x，重复定义会报错。(常用)const z = 10; //const定义的变量一般不做修改 可一次定义一个或多个变量 变量定义后，若没有赋值，那么变量会被赋予一个初始值——undefined（未定义） 变量的命名规范: 可以使用数字、字母、下划线(_)、美元符号($)的组合，且不能以数字开头 严格区分大小写（比如 A 和 a 不是同一个变量） 不能使用保留字或关键字 二、输出2.1 console.log()； 可以在浏览器的控制台输出信息，便于调试程序 2.2 日志 在浏览器控制台中打印日志。一般用来做代码调试。 12345console.log(&#x27;普通日志&#x27;);console.error(&#x27;报错日志&#x27;);console.warn(&#x27;警告日志&#x27;);console.dir(console); //输出对象的日志console.timelog(new Date()); //时间日志 2.3 弹窗 根据浏览器不同弹窗框样式不一样且无法修改样式 alert() 普通弹窗。一般用来做代码调试 confirm() 确认弹窗，有确认和取消两个选择。配合赋值可以得到用户的选择 prompt() 输入弹窗，有输入框可以输入文字。配合赋值可以得到用户输入的内容 三、数据类型 检测和转换类型函数 typeof()：检测数据的类型 Number()、 String()、 Boolean() ：转换数据类型 parseInt() parseFloat() ：取整数或者浮点数。 3.1 Number类型JavaScript不区分整数、浮点数等，统一都叫Number。typeof 100 得到 &quot;number&quot;。 浮点数精度问题 JS数值的运行会先将数值转为二进制，这种标准下小数可能会表示不全，导致最终的结果出现误差。 为了得到相对准确的结果，一般会将小数转为整数之后再进行运行，最后除以倍数。举个🌰: 12console.log( 0.1111+0.2222 ); //0.33330000000000004console.log( (0.1111*10000+0.2222*10000)/10000 ); //0.3333 JavaScript 中的 Number 类型只能表示[ -(253 - 1) , (253 -1)] 之间的数值。 Number 类型中还有一些比较特殊的： Infinity：表示正无穷大的数值 -Infinity：表示负无穷大的数值 NaN：(Not a Number)即非数值，用来表示无效或未定义的数学运算结构，如 0 除以 0 3.2 String类型 三种引号都能表示str 1&quot;文字&quot; &#x27;str&#x27; `abcd` 转义字符 12console.log( &quot;I&#x27;m a cool guy.&quot; ); //一种引号里面可以使用其他两种引号console.log( &quot;I said,\\&quot;Hello World.\\&quot;&quot; ); //引号内部使用相同的引号，则需要使用 \\ 转义符号 字符串拼接 进行 + 运算时，两边任意一边的数据是字符串的话，则是拼接的功能 12console.log(&quot;123&quot; + &quot;4&quot;); //&quot;1234&quot;console.log(&quot;123&quot; + 4); //&quot;1234&quot; 3.3 Boolean类型布尔类只有两个值：真true 假false。用于判断。注意：在python里首字母要用大写：True False 3.4 Undefined类型未定义类型的值为undefined在变量没有被赋值时，默认值也为undefined。 3.5 Null类型null和undefined意义很接近，都表示“没有”。null可以理解为一个“空”对象，但并不占据内存空间。通常在一个变量即将在后续的逻辑中被赋予一个对象值，但刚开始定义的时候不能确定到底是哪个对象值时，赋予它初始值null。 注意：typeof null得到&quot;object&quot;。 3.6 Object类型JS中object类型包含数组、普通对象、DOM节点、内置对象、函数等等 3.6.1 数组 取值用 [数字序号] 下标，从0开始计数，数组中可以存放数组。取值超出最大值时，得到undefined 12345let arr = [10,[&quot;Blind&quot;,&quot;Arbiter&quot;,[true,false]]];console.log(arr[0]); //10console.log(arr[1][0]); //&quot;Blind&quot;console.log(arr[2][1]); //falseconsole.log(arr[4]); //undefined 数组拥有 length 属性，可以得到数组存放的数据的个数。 1234let a = [1,2];let b = [3,4,,5,];console.log(a.length); //2console.log(b.length); //4 最后面没有值的话，不算个数，中间的,,之间即使没有数据也算个数 修改值或者新增删除值 123456789101112131415161718192021//指定下标式修改、新增数据let arr1 = [1,2];arr1[0] = 111;arr1[2] = 3;console.log(arr1); // [111,2,3]//通过设定数组长度删除值let arr2 = [7,8,9];arr2.length = 2;console.log(arr2); //[7,8]//增arr.unshift(&#x27;001&#x27;); //加在最前arr.pull(&#x27;100&#x27;); //加在末尾arr.splice(指定下标,往后删除数据个数,&quot;增加的数据1&quot;,&quot;数据2&quot;...); //指定位置加入//删arr.shift(); //头arr.pop(); //尾arr.splice(指定下标,往后删除数据个数); //指定//清空数组arr = []arr = null 3.6.2 普通对象 对象以键值对形式存储数据。键=对象属性，值=具体数据。 属性的命名规则比变量更宽松。属性名允许是数字，不规范的属性名字可以加&quot; &quot;变成一个正确的属性名。 取值时使用 . 操作符。 12345678910let a = &#123; name : &quot;BlindArbiter&quot;, &quot;age&quot; : 10000, //属性可以加 &quot;&quot; 类似字符串的写法，也可以不加 &quot;a b c&quot; : true, //不规则的属性名，必须加 &quot;&quot;，不加会报错 20 : null //自然数数字可以充当属性名，不必加 &quot;&quot; friend : [&quot;张三&quot;，&quot;李四&quot;]&#125;;console.log( a.age ); //10000console.log( a.friends[0] ); //&quot;张三&quot;console.log( a.hobby ); //undefined 当属性是一个数据时，使用 [] 来取值 123let a = &quot;age&quot;;console.log( xz[a] ); //18console.log( xz.a ); //undefined 对象可以取值，也可以重新赋值，也可以新增属性 12345let obj = &#123;a : 10&#125;;obj.a = 20;obj.b = 30;console.log(obj); //&#123;a:20,b:30&#125; 3.6.3 函数 函数是一个极为特殊的对象。 定义函数并执行 123456789101112//定义函数let a = function()&#123; //js代码&#125;;function b()&#123; //js代码 return 返回值&#125;//执行函数a(); b();//函数不调用则不执行 匿名函数 12345678//定义匿名函数function()&#123;&#125;//定义箭头函数(也是匿名函数的一种)() =&gt;&#123; //js代码&#125;//执行(()=&gt;&#123;&#125;)() object类型的数据，typeof会得到object，但是函数在typeof时得到function 四、运算符4.1 算术运算符 + 不同情景的不同作用： 123let a = 1 + 2; //结果:3 算术运算let b = 1 + &quot;2&quot;; //结果:&quot;12&quot; 拼接运算，+号两边任一边有字符串，+号就是拼接的作用let c = +&quot;1&quot;; //结果:1 +号前面没有数据，类似Number()功能，将数据转换为数字，转不了得到NaN - 不同情景的不同作用： 1234let a = 2 - 1; //结果1 算术运算let b = &quot;2&quot; - 1; //结果1 当成数字来运算let c = -1; //结果-1 负号let d = -&quot;1&quot;; //结果-1 同+号前面都没有时情况一样，只不过最终结果带上 负号 - ++ -- 前置后置自增自减 (同C) 1234let x = 3;console.log(x++); //3 //此时x=3+1=4 //可以理解为先赋值再运算console.log(++x); //5 //可以理解为先运算再赋值// ++/-- 就是 +1/-1 4.2 隐式类型转换不同类型的数据进行运算时会进行隐式类型转换： 1234567//num和str进行+运算时，会转换成str再运算 1 +&quot;2&quot; === &quot;12&quot; //进行减、乘、除、取模、乘方运算时，会先转换成数字再运算&quot;3&quot;-&quot;2&quot; === 1//++、--运算会先转换成数字再自增自减，最后得到数字结果let x = &quot;3&quot;;x++; 4.3 赋值运算符1= += -= *= /= %= x += 10; 相当于 x = x+10; ，其他同理，不多说。 注意：, 可表示在一条语句里面执行多个事情 1let x = (1,2,3,4,5); //x值最终为5 4.4 比较运算符1== === != !=== &gt; &lt; &gt;= &lt;= 运算后得到布尔值。==判断值等不等，===判断值和类型等不等。 字符串比较大小时，是按位比较各自的编码。&quot;5&quot;&gt;&quot;20&quot;得到true。 对象在进行相等判断时，比较的是内存地址。 4.5 逻辑运算符1&amp;&amp; || ! 与或非，!的结果始终是一个布尔值。 4.6 三目运算符1条件表达式 ? 表达式1 : 表达式2 ; 条件成立执行表达式1，不成立则2 五、判断、循环js里基本判断语句和基本循环语句的格式同C，直接过，这里不多讲了 5.1 判断 选择 if else if else 123456789101112if( 条件1 )&#123; //条件1为真时执行的代码&#125;else if( 条件2 )&#123; //条件1假 条件2真时执行的代码&#125;else&#123; //条件1、2都不满足时执行的代码&#125; switch 1234567891011121314switch(a)&#123; case &quot;1&quot;: //code1 break; case &quot;2&quot;: //code2 break; case &quot;3&quot;: //code3 break; default: //code4 break;&#125; 5.2 循环 js的for循环，我愿称之为C+Python的结合版 123for(语句1; 语句2; 语句3)&#123;\t//循环code&#125; while 1234567while( 条件 )&#123;\t//循环code&#125;do&#123; //循环code&#125;while( 条件 ) 还有，终止整个循环的break、终止单次循环的continue 5.3 数组循环 for遍历对象 1234a=&#123;1&#125;for(const key in a)&#123; console.log(key, a[key]); //key value //a[key]表示可变的值&#125; forEach()方法 1234567const arr1 = [33,44,55];let arr2=[11,22];arr1.forEach(function(value)&#123; arr2.push(value)&#125;)arr2.forEach((内容,下标)=&gt;&#123; console.log(内容,下标)&#125;) //根据本人多次尝试发现，forEach只传一个非纯数字参数的时候只输出内容，两个任意非等非纯数字参数时则输出内容和下标 map() 映射：把一个原数组映射成对应的新数组 1234let arr1 = [1,2,3,4]let arr2 = arr1.map(function(value)&#123; return value*value&#125;) 六、字符串、数组常用方法6.1 字符串方法 length 字符串长度，只能读取不可修改 charAt() 获取某一个字符串项，可以代替[ ]下标获取 substring() 截取字符串 1234567let str = &quot;HelloWorld&quot;console.log(str.length)//获取字符串中的某个数据console.log(str[1]) //econsole.log(str.charAt(1))//e//参数1为起始位置(包含)，参数2结束位置(不包含)，参数2不写默认截取所有console.log(str.substring(1,4)) //ell charCodeAt() 返回指定位置的字符串unicode编码 String.fromCharCode() 通过unicode编码返回对应的字符 123let str = &quot;JavaScript&quot;console.log(str.charCodeAt(2)) //118console.log(String.fromCharCode(11097)) //⭙ 字符串.toUpperCase() 大写转小写（不接受参数） 字符串.toLowerCase() 小写转大写（不接受参数） split() 切割字符串变数组（同python） 12let str = &quot;hello world&quot;console.log(str.split(&quot;&quot;)) //[&#x27;hello&#x27;,&#x27;world&#x27;] 6.2 数组方法 length 数组长度，不同于字符串的是数组长度可读可修改 1234567let arr = [1,2,3,4]console.log(arr.length) //4//数组长度可改变，数组内容也发生改变arr.length = 2console.log(arr) //[1,2] arr.length = 6 //数组长度增加 对应空数组项是undefinedconsole.log(arr[5]) //undefined //获取数组的某一数据 push() 依次往数组后面添加数组项 pop() 删除数组最后一项 12345let arr = [1,2,3]let arr1 = arr.push(4,5)console.log(arr) //[1,2,3,4,5]let arr1 = arr.pop()console.log(arr) //[1,2,3,4] shift() 移除数组第一项，同时数组长度-1 unshift() 在数组前添加一项数据 12345let arr = [1,2,3]let arr1 = arr.shift()console.log(arr) //[2,3]let arr1 = arr.unshift(0)console.log(arr) // [0,2,3] splice(index,num,info) index 从第几个项开始 num 往后删除几个数组项 info 从删除位置开始添加数组项 12345678910111213let arr = [1,2,3,4,5]arr.splice(2,3,&quot;a&quot;,&quot;b&quot;)console.log(arr) //[1,2,&quot;a&quot;,&quot;b&quot;]//1.=push() let arr = [1,2,3,4]arr.splice(arr.length,0,5) //[1,2,3,4,5]//2.=pop()arr.splice(arr.length-1,1) //[1,2,3,4]//3.=shift()arr.splice(0,1) //[2,3,4]//4.=unshift()arr.splice(0,0,5) //[5, 2, 3, 4] sort() 数组排列 接受一个函数作为参数，函数有两个形参 12345let arr = [22,44,11,33,55]arr.sort(function(a,b)&#123; return a - b //从小到大排列 return b - a //从大到小排列&#125;) concat() 合并两个数组为一个新的数组 123let arr1 = [1,2]let arr2 = [&quot;a&quot;,&quot;b&quot;]console.log(arr1.concat(arr2)) //[1, 2, &#x27;a&#x27;, &#x27;b&#x27;] join() 根据参数规则返回新的字符串，不改变原数组 123let arr = [1,2,3,4]let arr1 = arr.join(&quot;-&quot;)console.log(arr1) //1-2-3-4 isArray() 判断接受的对象是否是数组，因为如果直接用typeof检测数组将返回object 12let arr = [1,2,3]console.log(Array.isArray(arr)) //true 6.3 字符串和数组两者通用方法 indexOf() 顺序检索 lastIndexOf() 倒序检索 123456//只有一个参数,返回下标let str=&quot;hello&quot;console.log(str.indexOf(&quot;e&quot;)) //1console.log(str.lastIndexOf(&quot;e&quot;)) //1//两个参数：参数1是检索值，参数2表示从什么位置开始检索，没有将返回-1console.log(str.indexOf(&quot;o&quot;,1)) //4 七、基础DOM操作DOM（Document Object Model）文档对象模型。规定了一些用于操作HTML页面的API。 API（Application Programming Interface，应用程序接口）是一些预先定义的，已经拥有某些功能的函数或属性。我们可以直接按照自己的需求来使用。 7.1 获取页面元素JS中要操作HTML标签，得先获取到对应的标签，我们称之为元素或者节点对象。 通过选择器获取（推荐） 12document.querySelector(&quot;#main .nav&quot;);document.querySelectorAll(&quot;#banner li&quot;); //获取多个 //或者可以理解为选中同一种标签 通过ID获取（推荐） 1document.getElementById(&quot;main&quot;) 通过class名获取 1document.getElementsByClassName(&quot;left&quot;) 通过标签名获取 1document.getElementsByTagName(&quot;p&quot;) 特殊标签的获取 获取html标签 document.documentElement 获取head标签 document.head 获取body标签 document.body 获取title标签 document.title 7.2 创建、添加、删除节点 创建节点 123createElement() //创建一个元素节点createTextNode() //创建一个文本节点createDocumentFragment() //创建一个文档碎片，先将多个节点整合到这里面再统一添加 添加节点 12appendChild() //在元素最后添加一个子节点insertBefore(a,b) //在元素某个子节点之前添加新子节点，参数a为新节点，参数b为已存在的子节点 替换节点 1replaceChild(a,b) //用新节点替换某个子节点，参数a为新节点，参数b为已存在的某个子节点 删除节点 1removeChild() //删除元素的某个子节点 演示效果代码块这是什么链接？点一下传送门123456789101112131415161718192021&lt;div id=&quot;test&quot;&gt;&lt;/div&gt;&lt;script&gt; //获取 let test = document.querySelector(&#x27;#test&#x27;);\tconsole.log(test); //创建 let h3 = document.createElement(&quot;h3&quot;); let a = document.createElement(&quot;a&quot;); //插入内容 h3.innerText=&#x27;这是什么链接？点一下&#x27;; a.innerText = &#x27;传送门&#x27;; a.href = &#x27;https://github.com/BlindArbiter&#x27;; console.log(a); //添加 test.appendChild(h3); test.appendChild(a);\t//删除\t//test.removeChild(h3)&lt;/script&gt; 7.3 监听事件 事件种类 鼠标事件 onclick左键单击、 ondblclick左键双击、oncontextmenu右键单击、 onmouseover onmouseenter鼠标移入 、onmouseout onmouseleave鼠标移出、、 onmousedown鼠标按下、 onmousmove鼠标移动 、onmouseup鼠标抬起 键盘事件 onkeydown onkeypress 键按下、 onkeyup键抬起 系统事件 onload加载完成后、 onerror加载出错后、 onresize窗口调整大小时 、onscroll滚动时 表单事件 onfocus获取焦点后 、onblur失去焦点后、 onchange改变内容后 、onreset重置后、 onselect选择后 、onsubmit提交后 监听事件写法 DOM节点.on事件 = 函数()&#123; code &#125; 这里的函数称之为事件函数，它不会自执行，而是当事件触发时才执行。 操作HTML内容 DOM节点.innerHTML 获取/修改 元素的HTML内容DOM节点.innerText 获取/修改 元素的文本内容 this 在事件函数中， this 表示触发事件的这个节点对象，可以类比一下C++的this指针。 八、属性操作、样式操作8.1 操作样式 修改样式 JS想要改变元素的样式，那么就相当于要改变控制元素的css（三种样式 ）： 外部样式 ：前端的JS不能修改一个外部的文件，所以无法直接修改外部样式来改变元素。 内部样式：内部样式放置到style标签中，而style又在当前页面中，所以能被JS控制。(麻烦，不推荐) 行内样式：直接写在标签中，并且优先级最高。(最常用) 节点.style.属性 来控制单个的行内样式。 节点.style.cssText 来控制节点的所有行内样式。 Tip：当单个标签操作的样式比较多时，直接改变class来改变样式会方便很多。 获取样式 .style 只能获取行内样式，要获取元素的最终显示样式使用 getComputedStyle(节点)。 8.2 操作class名字使用 .className 可以来操作标签的类名，但是需要新加一个类名，或者去掉某个类名时，使用.className较为麻烦。所以推荐使用新API.classList 来操作类名。 添加：节点.classList.add(&quot;类名&quot;) 移除：节点.classList.remove(&quot;类名&quot;) 切换（有则删，无则加）：节点.classList.toggle(&quot;类名&quot;) 判断是否有某个类名（得到布尔值）：节点.classList.contain(&quot;类名&quot;)","tags":["JS"],"categories":["Web开发"]},{"title":"HTML—CSS","path":"/2023/03/05/230305 HTML-css/","content":"我们一般用css来改变样式，实现样式和结构相分离 css代码分为外部样式、内部样式、行内样式三种写法。 外部样式（推荐👍） 单独创建.css后缀的文件，通过link标签引入，link通常放置于头部： rel表示link标签的类型，值为’stylesheet’时起到牵线搭桥的作用 1&lt;link rel=&#x27;stylesheet&#x27; href=&#x27;路径&#x27;&gt; 内部样式 通过style标签写在HTML内部，利用选择器选择，样式设置 行内样式 直接写在标签属性中 123&lt;body&gt; &lt;p style=&quot;css代码&quot;&gt;这里是一些段落文字&lt;/p&gt;&lt;/body&gt; 选择器写在&lt;style&gt; &lt;/style&gt;里，可以把它理解为中间商(?) id与class命名 id命名唯一，单个标签不允许多个id名，同页面中不存出现重复的id名，重名会影响js代码获取标签 class命名不唯一，单个标签可以拥有多个class名，不同标签允许使用相同class名 注意一些命名规范 允许大小写字母和数字，必须以字母开头，单词一般小写； 见名知意，不允许单个字母做名字，各命名词汇英文参考：命名词汇 单词之间使用-号连词或者驼峰连词（具体看目标网页或者具体公司的整体规范） 选择器分类 基础选择器 写法 举例 通配符选择器（指所有标签） * *&#123; margin:0; padding:0; &#125; 标签选择器 标签名 div&#123; width:50px; height:50px; &#125; class类选择器 .class类名 .nav&#123; width:20px; &#125; id选择器 #id名 #id1&#123; width:50px; &#125; 复合选择器 写法 举例 后代选择器（非固定父子关系） 父 子 孙… .nav div a&#123; margin:10px; &#125; 子代选择器（只会选取儿子） 父 &gt; 子 div&gt;a&#123; color:red; &#125; 组合选择器（多选择器同一样式） 选择器 , 选择器 .nav p,#id1 a&#123; font-size: 12px; &#125; 伪类选择器 写法 举例 链接伪类（鼠标悬停） :hover a:hover&#123;color:red;&#125; 链接伪类（鼠标点击选中） :active p:active&#123;color:blue;&#125; 表单获得焦点时被选中 :focus input:focus &#123;background-color: green; &#125; 选择器权重问题来了，如果一个标签被多个选择器赋予了相同的属性且值不一样时，这个标签在网页会显示哪种属性🤔 举个例子🌰：此时.nav和p都选中了这个p标签，且规定了不同颜色 123/*css代码文件*/.nav&#123;color: red;&#125;p&#123;color: blue;&#125; 12&lt;!--HTML代码文件--&gt;&lt;p class=&quot;nav&quot;&gt;这是一段文字&lt;/p&gt; 这里就出来一个概念：选择器权重，顾名思义，这句文本最终颜色就要根据选择器的优先级决定。 !important可标识该选择器最高权重 123p&#123; color:red !important&#125; 选择器权重：!important &gt; id &gt; class类|伪类 &gt; 标签 &gt; 通配符 &gt; 继承样式 先比较权重，权重一样比较各级别选择器出现的次数 当多个选择器权重一样时，以最后出现的为准 盒子模型在HTML中，标签都是一个长方形模型，每一个html标签都可以看成一个盒子 盒子模型包含内容区(content)、内边距(padding)、边框(border)、外边距(margin) 在开发者模式中可以看到该网页的盒子模型 内容区content见名知意，即放置内容（或者说标签） 其大小可由盒子中的内容撑开，或者设置 width height 属性来指定固定的大小。 px是一种像素单位 12345div&#123; width: 100px; height: 100px; background-color: red; /*在开发的时候或许可以先添加着背景色便于观察(?)*/&#125; 一个小建议：在布局时，除非迫不得已，任何盒子不要设定死高度，由着盒子内容自己把盒子撑大就好啦 内边距padding盒子内容和边框的距离 padding属性接收长度值或百分比值，但不接收负值： 123456 div&#123; padding-top: 10px; /*上内边距*/ padding-right: 10px; /*右内边距*/ padding-bottom: 5px; /*下内边距*/ padding-left: 5px; /*左内边距*/&#125; padding属性可用一个属性表示四个方位的值，看接收值个数： 1234567891011/*1、上下左右 全部10px*/div&#123; padding: 10px; &#125;/*2、上下10px、左右20px*/div&#123; padding: 10px 20px; &#125;/*3、上10px、左右20px、下30px*/div&#123; padding: 10px 20px 30px; &#125;/*4、上10px、右20px、下30px、左40px*/div&#123; padding: 10px 20px 30px 40px; &#125; 边框border可由统一的border属性来规定边框，这三个值顺序可以打乱： 12/*border: border-width、border-style、border-color */div&#123; border: 5px solid red; &#125; 也可分解属性表示： 123456div&#123; border-top: 10px solid red; border-right: 5px solid red; border-bottom: 10px solid red; border-left: 5px solid red;&#125; 还可以进一步分解为border-width、border-style、border-color 123456789101112/*1.全部方位*/div&#123; border-width: 5px; border-style: solid; border-color: red;&#125;/*2、单个方位*/div&#123; border-top-width: 4px; border-top-style: solid; border-top-color: red;&#125; 边框线常用类型 值 描述 none 无边框 solid 实线 dotted 点状边框 dashed 虚线 double 双线（宽度=border-width的值） 外边距margin盒子和盒子之间的距离 margin属性的值和padding很类似，不过margin允许负值 margin的左右还多了auto值，可以用来将盒子在父级中自动居中 怪异盒子模型上面说的盒子模型就是标准盒形象地说的话，如果说标准盒是个外向的喜欢向外分享的小盒子，那么怪异盒就是个内向的小盒子(?)🤔 怪异盒子的width和height都=content + border + padding怪异盒模型下盒子大小 = width (content + border + padding) + margin 其实就是当我们设置一个怪异盒及其大小时，如果后面调整了border或者padding的大小，那么content部分大小会随之自动调整，整个盒子不会膨胀 设置怪异盒子： 1box-sizing: border-box 字体文本样式字体样式 属性 作用 备注 color 字体颜色 font-size 字体大小 单位px font-weight 字体粗细 normal正常 blod粗 bolder更粗 lighter更细 (或者100-900整百数数值) font-famliy 字体名称 font-style 字体样式 normal正常 italic 斜体 line-height 行高 normal默认合理的行间距 / 数值大小=行间距 复合写法 1234567/*font: 斜体 粗细 字体大小/行高 字体类型; */&lt;style&gt; body &#123; font: italic 700 16px/normal &#x27;HarmonyOS_Regular&#x27; &#125;&lt;/style&gt; 字体大小和行高必须用/合在一起，不能分开； 字体大小和字体类型必写，除此之外省略某些项也不会影响后面其它属性。 文本样式 水平对齐方式 text-align text-align： left 居左对齐 center 居中对齐 right 居右对齐 justify 两端对齐 大小写 text-transform text-transform： none 默认值 uppercase 全部转化大写 lowercase 全部转化小写 capitalize 首字母转换为大写 文本线 text-decoration text-decoration： none 没有文本线 underline 下划线 line-through 中划线 overline 上划线 text-decoration-color: 划线颜色 text-decoration-style:划线转态 dotted点状线、dashed 虚线、solid 实线、double 双边框、wavy：波浪线 其他属性 属性 作用 备注 overflow 文本溢出显示方式 auto显示滚动条 hidden隐藏 text-indent 首行缩进 带单位的长度值（px / em） letter-spacing 字间距 word-spacing 单词间距 white-space 换行方式 normal默认正常换行 nowrap文本不换行 word-break 长单词换行方式 normal默认换行方式break-all允许在单词内换行 keep-all只能在半角空格或连字符处换行 user-select 选中设置 auto自由选择 none不能选择 all全部选中 背景属性background是一个复合属性，用于设置盒子的背景颜色或背景图片。 复合写法： 1backgorund: color image repeat position/size attachment; 背景颜色background-color背景色默认是会延伸到border下方的 12background-color: 颜色;&lt;!--默认 transparent透明--&gt; 背景图片background-image背景图片默认也是会延伸到border下方的 1234/*1、默认不插入背景图*/div&#123; background-image: none; &#125;/*2、插入背景图 */div&#123; background-image: url(&quot;路径&quot;); &#125; 背景与内容的层叠关系如图： 背景平铺background-repeat1div&#123; background-repeat: 值; &#125; 值 repeat 默认背景图片平铺 no-repeat 背景图片不平铺 repeat-x 背景图片水平平铺 repeat-y 背景图片垂直平铺 图片位置background-position1background-position:X Y; X Y 默认0 0, 取值可以是像素px或者百分比%X Y 还可以取的值：X：left左对齐、center水平居中、right右对齐Y：top顶部对齐、center垂直居中、bottom底部对齐 如果只给一个值，那么另一个值默认center（50%） 图片尺寸background-size通常用于在不改变图片宽高比的情况下，铺满盒子。 background-size: X Y X Y值默认对应原图 宽 高 cover 等比例缩放直到铺满X轴和Y轴 contain 等比例缩放直到铺满X或Y轴其中一个 背景附着background-attachment background-attachment: scroll 默认，背景随滚动而滚动 fixed 背景不随滚动而滚动 背景图片和img标签的对比 背景图片不占用content内容部分，而img标签会占用。 背景图片大小如果超出盒子不会显示，而img标签如果超出父级盒子默认是会超出显示的。 背景图片：给盒子内容部分加背景，或者加一些小图标项目符号等img标签：具体想表达的一个图片信息、希望搜索引擎能检索到对应的图片信息 一些补充圆角边框border-radius取值通常为像素px或者百分比 1234/*全部角：*/border-radius: 10%;/*分解单个角*/border-top-left-radius: 10px 30px; 复合写法： border-radius： 一个值 10px 全部角 两个值 10px 20px 左上右下 || 右上左下 三个值 10px 20px 30px 左上 || 右上左下 || 右下 四个值 10px 20px 30px 40px 左上 || 右上|| 右下 || 左下 阴影box-shadow盒子阴影，让盒子四周产生阴影； 1234567891011div&#123; box-shadow:10px 5px 10px 5px red outset;&#125;/*值1：水平偏移（必需）值2：垂直偏移（必需）值3：模糊距离（可选，默认0） 从扩散边缘开始，向外逐渐模糊的距离值4：扩散距离（可选，默认0） 规则从何处开始模糊，默认0即盒子边，大于0则会看到阴影明显漏出，允许负值值5：隐藏颜色（可选，默认黑色）值6：阴影扩散方向（可选，默认ouset向外扩展，可以改为inset向内扩展）*/ 透明 opacity取值 0—1（完全透明——完全不透明） 渐变色 线性渐变 12/*百分比值也可以用确却的像素值代替*/background: linear-gradient(red 100%, blue 0%); 鼠标样式cursor属性规定鼠标移入元素时的样式 值 描述 url 自定义光标的URL。(请在此列表的末端始终定义一种普通光标，以防没有由URL定义的可用光标。) default 默认光标（通常是一个箭头） auto 默认值。浏览器设置的光标。 crosshair 光标呈现为十字线。 pointer 光标呈现为指示链接的指针（一只手） move 此光标指示某对象可被移动。 text 此光标指示文本。 wait 此光标指示程序正忙（通常是一只表或沙漏）。 help 此光标指示可用的帮助（通常是一个问号或一个气球）。 定位position属性，可以将元素从文档流中取出，然后使用方位词（left top right bottom）精准控制它的位置。不同的定位值可以使元素拥有不同的表现形式，例如放在另外一个元素上面或者固定在浏览器的显示区某个位置。 值 描述 relative 生成相对定位的元素，相对于其正常位置进行定位。 absolute 生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。 fixed 生成绝对定位的元素，相对于浏览器窗口进行定位。 static 默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。 相对定位 relative 相对于原有位置的定位，通过方位属性进行相对于原位置的偏移。 （定位元素才有的方位属性： top | bottom | left | right，值一般使用px单位或%值。） 特点： 不脱离文档流 不影响元素本身的任何特性 如果不加方位词偏移也没有任何影响 绝对定位 absolute 能让元素脱离文档流 (原地起飞…(?))，使用方位属性相对于最近的有定位的父级元素进行偏移； 注意！方位属性初始值不是0，而是auto。 left和top优先级比right和bottom高，比如一个元素既拥有left也拥有right，最终位置以left为准。 特点： 脱离文档流 元素宽高默认值为0 上级盒子中得有一个盒子作为载体，找不到最近的定位父级则相对于body标签 会将元素转换成块元素 设置了绝对定位，没有设置层级；html后写居上 margin:auto 会暂时失效 fixed 固定定位能让元素脱离文档流，使用方位属性相对于浏览器可视区进行偏移； 特点： 脱离文档流 元素宽高默认值为0 margin:auto 会失效 层级🌰问题又来了，定位元素之间，可能会出现覆盖问题，定位元素会遮挡住另一个定位元素 那么当然是越后面出现的元素优先级越高，我们可以使用z-index层级属性来调整优先级。 z-index属性只针对定位元素有效 取值为一个整数数字，默认auto，可正可负","tags":["HTML"],"categories":["Web开发"]},{"title":"HTML-基础","path":"/2023/03/02/230302 HTML-基础/","content":"关于前端web开发的正经笔记，这篇是不含css的HTML基础 一、网页基础知识1.1 HTML模板新建或者打开一个.html文件，输入!后按空格会出现一个模板 123456789101112131415&lt;!DOCTYPE html&gt; &lt;!--规定了浏览器文档使用哪种规范，以前需要在后面写上很长一串规范地址，现今HTML5规范无须额外指定--&gt;&lt;html lang=&quot;zh-cn&quot;&gt; &lt;!--所有网页最大的结构 网页中所有的标签存放在html标签中--&gt; &lt;head&gt; &lt;!--网页头部 网页设置 告诉浏览器一些相关信息--&gt; &lt;!--meta 具体设置网页设置的标签 --&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;!--网页编码格式 推荐UTF-8国际编码,常用的还有gbk国标--&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;!--视口 -→ 移动端--&gt; &lt;title&gt;我是网页标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 网页主体 网页结构 &lt;/body&gt;&lt;/html&gt; 1.2 HTML的lang属性 决定浏览器是否自动弹出翻译框 弹出: en，代表是英文网页(不管后续写的内容是不是英文) 不弹出: zh-cn，代表网页是一个中文网页 1.3 注意一些书写规范 标签、属性名以及相关符号书写均在英文半角状态下的小写 id、class必须以字母开头 所有双标签必须闭合 属性值必须带引号，单双引号都可以 二、标签2.1 meta (辅助标签)meta标签写在head标签中，具体设置网页设置的标签 2.2 div (块标签) (division分开分隔) 独占一行（上下分割） 2.3 H系列标题标签(heading) h1~h6标签用于表示网页内容的标题，不同程度的加粗与增大。 在一个网页中**h1标签最好是有且仅有一个**（有利于SEO优化） 2.4 排序标签 2.4.1 ul无序列表标签 (unordered list不排序的列表) 其子标签必须是&lt;li&gt;。 默认实心圆点符号，修改type属性可改变符号 1234567891011&lt;!--type=&quot;disc&quot; 实心圆点type=&quot;circle&quot; 空心圆点type=&quot;square&quot; 实心方块type=&quot;none&quot; 不显示符号--&gt;&lt;ul type=&quot;circle&quot;&gt; &lt;li&gt;第一行&lt;/li&gt; &lt;li&gt;第二行&lt;/li&gt; &lt;li&gt;第三行&lt;/li&gt;&lt;/ul&gt; 2.4.2 ol有序列表标签 (ordered list有序表) 其子标签必须是&lt;li&gt;。 默认有数字符号，修改type属性可改变符号 12345678910&lt;!--type=&quot;1&quot; 数字顺序type=&quot;A&quot; 或者 type=&quot;a&quot; 字母顺序type=&quot;I&quot; 或者 type=&quot;i&quot; 罗马数字顺序--&gt;&lt;ol type=&quot;A&quot;&gt; &lt;li&gt;第一点&lt;/li&gt; &lt;li&gt;第二点&lt;/li&gt; &lt;li&gt;第三点&lt;/li&gt;&lt;/ol&gt; 2.5 p段落标签 (paragraph)12&lt;p&gt; p标签中通常用来放置一段文字。 注意：p标签里不可以放div标签(任意块标签)，这会导致在浏览器中p标签会被分隔成两个。&lt;/p&gt; 2.6 a标签 (超链接 / 锚点) 2.6.1 超链接 通过添加target属性可以指定打开链接的位置 target=”_blank” 新标签页打开 target=”_new” 新标签页打开，但所有的new只会打开一个新标签页 target=”_self” 默认，在当前标签页打开 1&lt;a href=&quot;https://blindarbiter.github.io&quot; target=&quot;_blank&quot;&gt;点我跳转到BlindArbiter的博客&lt;/a&gt; 2.6.2 锚点 (anchor锚) 跳到页面中的对应位置，锚点还可配合name属性使用 12&lt;a href=&quot;#abc&quot;&gt;点我页面滚动到name为abc的标签位置&gt;&lt;/a&gt;&lt;a name=&quot;abc&quot;&gt;滚到这里&lt;/a&gt; 2.7 img标签 (image图像)单标签，可用 / 作为结尾 12&lt;img src=&quot;xxx&quot;&gt;&lt;img src=&quot;xxx&quot; /&gt; 两种写法都可以在HTML5的新标准中，明确的指出了不需要/来结束单标签，所以，更推荐大家不写/ 一些常用属性： src：指定图片资源路径 相对路径：或者直接以文件名或目录名开头。 ./ 相当于当前路径 ../ 返回到该文件的上一级路径 绝对路径：一个从根目录出发的路径或者一个完整的网络地址。 / 项目根目录 所有写路径的地方都适用相对路径和绝对路径的写法，比如上面讲过的a标签herf属性。 width height：指定img显示大小 能为img图片预留对应的空间从而不影响其他布局 1234&lt;img src=&quot;xxx&quot; width=&quot;200px&quot; height=&quot;100px&quot;&gt; 像素单位px&lt;img src=&quot;xxx&quot; width=&quot;50vw&quot; height=&quot;50vh&quot;&gt; 可视区域的单位view width/height：1vh=1%屏幕占比 tip：width与height一般情况下和图片原始尺寸保持一致，不过不一致也是允许的，但即使使用width和height缩小图片，仅仅是视觉上的缩小，浏览器还是需要加载原始的图片资源（并不能减轻请求压力）,所以有图片缩放的需求时，应当提前用图片处理软件处理好了之后，再引入图片。 alt属性：告知搜索引擎当前图片表示 当img的src地址出错时，alt属性的值能显示出来（或许能让用户/浏览者得到不那么糟糕的体验(?)） 123&lt;imghref=&quot;https://github.com/BlindArbiter/BlindArbiter.github.io/blob/master/img/hexo_blog/cover1.jpg&quot; alt=&quot;烟花&quot; title ：在img标签里，当鼠标指针移动到图片上时，title能够显示出提示文字（增强用户/浏览者体验） tip：仅限于网络图片打不开，当别人做了安全验证时way：在我们要用图片的html页面的head中，加入以下代码（解除限制） 1&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt; 2.8 其他标签一些与内容同化的标签 标签名称 写法 b标签 &lt;b&gt;&lt;/b&gt; 文字加粗，strong还能够被搜索引擎检索 i标签em标签 &lt;i&gt;&lt;/i&gt;&lt;em&gt;&lt;/em&gt; 文字斜体，i标签仅为视觉上斜体em还能被搜索引擎检索 br标签 &lt;br/&gt; 文本换行 hr标签 &lt;hr&gt; 横线分隔 sup标签sub标签 &lt;sub&gt;&lt;/sub&gt;&lt;sup&gt;&lt;/sup&gt; 上角标下角标。 del标签 &lt;del&gt;&lt;/del&gt; 删除线 span标签 &lt;span&gt;&lt;/span&gt; 本身没有特殊效果，可配合css添加样式 1&lt;span style=&#x27;color:red&#x27;&gt;红色&lt;/span&gt; 三、表格table双标签 &lt;table&gt;&lt;/table&gt; tr 定义表格的行，内容都写在行里面 th (thead) 行里面，字体加粗，表示头部标题 td (tbody) 行里面，表示表格具体每一项 12345678&lt;table&gt; &lt;tr&gt; &lt;th&gt;表格标题&lt;/th&gt; &lt;td&gt;表格内容&lt;/td&gt; ... &lt;/tr&gt; ...&lt;/table&gt; 3.1 边框和边距属性 属性 / 样式 作用 border 每个单元格都加上边框（但该数值大小只影响外围边框粗细） cellpadding 单元格内容与边框的距离 cellspacing 单元格之间间隙大小 align 设置文字对齐方式（类似于text-align） border-collapse:collapse(css样式) 相邻单元格的边框合并（style=’ ‘/用选择器） css样式的style行内样式写法 12345&lt;style&gt;table&#123;\tborder-collapse:collapse;\t&#125;&lt;/style&gt; css样式选择器写法 123456&lt;table style=&quot;border-collapse:collapse&quot;&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 3.2 单元格合并纵向合并：rowspan 规定单元格纵跨的行数 1&lt;td rowspan=&quot;2&quot;&gt;&lt;/td&gt; 横向合并：colspan 规定单元格横跨的列数 1&lt;td colspan=&quot;2&quot;&gt;&lt;/td&gt; tip：合并后记得删除多余单元格 其它补充： tbody 即使不写，默认也会添加这个标签去包裹所有内容； caption 表格标题 四、表单由表单域、表单控件和提示信息组成作用：收集客户端信息 4.1 form标签form标签是一个存储表单元素的区域，里面提供数据输入和采集的是很多表单控件元素完成的。 写法 123&lt;form action=&quot;url地址&quot; method=&quot;提交方式&quot; target=&quot;打开方式&quot; name=&quot;表单名&quot;&gt; &lt;!--各种表单控件元素--&gt;&lt;/form&gt; action — 表单提交地址 method — 表单提交数据的方式（get 和 post） target — 打开方式 即后端返回的新页面 (同上述a标签的target) name — 表单名 4.2 表单控件 属性 type 表单类型 name 赋值属性 value 设置表单控件的值 placeholder 提示文本 checked 默认选择，单选或多选时，可以指定初始默认的已被选中的项 disabled 禁止使用，规定input禁止使用 hidden 隐藏视图 表单控件的作用是采集用户的数据然后提交到后端，所有的控件都必须有name及value属性，并且除了单选多选外，所有的控件name都不能相同。 input单标签，标签属性type不同，意义不同： value的值随便定义，后面添加文字补充说明 空按钮一般用js添加功能事件 属性 示例 text 单行文本框 &lt;input type=&quot;text&quot; name=&quot;名字&quot; placeholder=&quot;提示文字&quot; /&gt; password 密码输入框 &lt;input type=&quot;password&quot; name=&quot;名字&quot; /&gt; radio 单选按钮 &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot; /&gt;男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot; /&gt;女 checkbox 多项选择 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;1&quot; /&gt;羽毛球&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;2&quot; /&gt;乒乓球&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;3&quot; /&gt;网球 button 空按钮 &lt;input type=&quot;button&quot; value=&quot;按钮&quot; /&gt; &lt;button type=&quot;button&quot;&gt;按钮&lt;/button&gt; reset 重置按钮 &lt;input type=&quot;reset&quot; /&gt; file 上传文件 &lt;input type=&quot;file&quot; name=&quot;f&quot; /&gt; hidden 隐藏 &lt;input type=&quot;hidden&quot; name=&quot;hide&quot; value=&quot;1&quot; /&gt; submit 提交 &lt;input type=&quot;submit&quot; /&gt;&lt;button&gt;提交按钮&lt;/button&gt; number 数字输入框 &lt;input type=&quot;number&quot; /&gt; (min最小 max最大 step倍数) range 数字滑块 &lt;input type=&quot;range&quot; /&gt; (min最小 max最大 step倍数) timedatemonthweek 时间年月日年月年周 &lt;input type=&quot;time&quot; /&gt; &lt;input type=&quot;date&quot; /&gt;&lt;input type=&quot;month&quot; /&gt; &lt;input type=&quot;week&quot; /&gt; color 颜色 &lt;input type=&quot;color&quot; /&gt; label辅助input进行选择。 我们可以通过给文字加上label标签然后将文字和input关联起来。 一个label只服务一个表单控件 123456label的for属性与input的id属性对应：&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;1&quot; id=&quot;sex1&quot; /&gt;&lt;label for=&quot;sex1&quot;&gt;男&lt;/label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;2&quot; id=&quot;sex2&quot; /&gt;&lt;label for=&quot;sex2&quot;&gt;女&lt;/label&gt;或者：&lt;label&gt; &lt;input type=&quot;radio&quot;,name=&quot;sex&quot;，value=&quot;男&quot;&gt;男 &lt;/label&gt;&lt;label&gt; &lt;input type=&quot;radio&quot;,name=&quot;sex&quot;，value=&quot;女&quot;&gt;女 &lt;/label&gt; 下拉选框select 和 option配合实现下拉选框 1234567891011&lt;!-- name规定给select value规定给option并且不能相同 --&gt;&lt;select name=&quot;days&quot;&gt; &lt;option value=&quot;none&quot;&gt;---请选择星期---&lt;/option&gt; &lt;!--或 value=&quot;&quot; --&gt; &lt;option value=&quot;1&quot;&gt;星期一&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;星期二&lt;/option&gt; &lt;option value=&quot;3&quot;&gt;星期三&lt;/option&gt; &lt;option value=&quot;4&quot;&gt;星期四&lt;/option&gt; &lt;option value=&quot;5&quot;&gt;星期五&lt;/option&gt; &lt;option value=&quot;6&quot;&gt;星期六&lt;/option&gt; &lt;option value=&quot;0&quot;&gt;星期日&lt;/option&gt;&lt;/select&gt; select标签的size属性：规定下拉时最多显示几个 option标签的selected属性：规定默认显示哪个option 文本域textarea多行文本输入框，rows标签属性定义高度，cols标签属性定义宽度； 如果需要用来传值，同样的需要制定name属性。 表单控件分组fieldset 和 legend配合将多个表单控件根据需要分组； fieldset分组，legend定义组标题。 12345678910111213&lt;form action=&quot;&quot; medthod=&quot;&quot; name=&quot;&quot;&gt; &lt;fieldset&gt; &lt;legend&gt;注册信息&lt;/legend&gt; 用户名：&lt;input type=&quot;text&quot; name=&quot;user&quot; /&gt; 密 码：&lt;input type=&quot;text&quot; name=&quot;pwd&quot; /&gt; &lt;/fieldset&gt; &lt;fieldset&gt; &lt;legend&gt;个人信息&lt;/legend&gt; 姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt; 年龄：&lt;input type=&quot;text&quot; name=&quot;age&quot; /&gt; 性别：&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;0&quot; /&gt;男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;1&quot; /&gt;女 &lt;/fieldset&gt;&lt;/form&gt; 4.3 一些补充表单相关选择器 :focus 表单获得焦点时被选中。 :focus-within 表单自身或者表单后代元素焦点时被选中触发","tags":["HTML"],"categories":["Web开发"]},{"title":"搭博客不完整实录2","path":"/2023/02/26/230226 搭博客不完整实录2/","content":"我随便记记，你随便看看 记一些踩坑，记一些修改，慢慢研究慢慢学学，一点一点搭起这个小破站 Template rander error报错难得整理完一篇博客想着发布完收工，好的传不上😐 报错如图 先去查看了官方文档，是这么说的🤔 有时在运行命令$ hexo generate时返回一个错误: 一个可能的原因是文件中有一些无法识别的单词，例如不可见的零宽度字符。 小小小小小小小小小插曲： 看到 “文件中出现“这里，🤔 说来好笑，对，我非常老实地去检查了上面列出来的一个个文件，然后发现这些文件全都是搭博客那天随着主题一起下载的文件，修改日期都是同一天同一个时候，我想着之前更新博客时也没报错，怎么现在更新博客却会报错，应该不是这些文件的问题。 对，想得真好，但是我一身反骨。本着认真严谨的质疑精神和怀疑态度，花了几天学习了下JavaScript，当我能看懂这些文件的大概之后，我又沉默了，因为文件真的没问题，是我有问题🤐 于是向万能的互联网屈服了 回到正题： 这是在发布文章时会出现的一种错误可能是在文章中使用了大括号 &#123; &#125; 这个特殊字符，且没有转义导致编译不通过（至少我是） 解决办法就是，先找到出现问题的文章，再对&#123;&#125;进行转义 或者 删掉其中的&#123;&#125; FATAL: Could not read from remote repository. 使用hexo d命令时报的生成错误。 打开git 1234567git init删除博客文件下.deploy_git文件git push origin master //切换成master分支git config --global core.autocrlf falsehexo clhexo ghexo d 还创建了一个公钥（虽然感觉应该不是这个公钥的作用，但既然做了这步也还是记一记） 1ssh-keygen -t rsa -C “github用户名@github.com” 图片由于新建的博客看着实在太空了，于是就想着推篇文章充实充实 本地浏览看的时候就发现图片全都被施展了消失魔法😕 原md文件插入的图片和html格式不兼容 可以把第三条Typora里自带的图片插入的绝对路径改为相对路径（即第一条，注意\\要改成/） 也可以用img标签格式，属性src=&#39;指定图片资源路径&#39;（第二条）还有width、height、alt、title等属性，不过我一般都懒得调整就是了 区别如图： 总之就是typora里能看到的图片一般都放不上网页，看不见的没写错格式和路径的一般都行👏 还有放的封面图片，横幅图片等同理。 要想本地看到图片blog也能看到，没问题，我们只需要把图上传到github，然后把图片路径改成github里图片的url就好啦🥳，这样可以不用考虑那么多标准，我每次发博客都会提前改掉图片路径，一块传完上去就都能看到啦（墙裂推荐👍） 迁移—RSS首先，安装 hexo-migrator-rss 插件。 1$ npm install hexo-migrator-rss --save 插件安装完成后，执行下列命令，从RSS迁移所有文章。source 可以是文件路径或网址。 1$ hexo migrate rss &lt;source&gt; （这个功能我还在摸索） Footer页脚链接带下划线，可以去主题的\\source\\css\\_layout\\sidebar\\footer.styl里面找到a.item在里面添加或修改text-decoration属性： 1text-decoration: none 字体要想引用外部字体，你需要先在 _config.yml 中 inject 引入 举例，这里换的是HarmonyOS 字体 在_config.yml里插入 12345inject: head: - &lt;link rel=&quot;preconnect&quot; href=&quot;https://s1.hdslb.com/&quot; /&gt; - &lt;link rel=&quot;stylesheet&quot; href=&quot;//s1.hdslb.com/bfs/static/jinkela/long/font/regular.css&quot; media=&quot;all&quot; onload=&quot;this.media=&#x27;all&#x27;&quot; /&gt; - &lt;link rel=&quot;stylesheet&quot; href=&quot;//s1.hdslb.com/bfs/static/jinkela/long/font/medium.css&quot; media=&quot;all&quot; onload=&quot;this.media=&#x27;all&#x27;&quot; /&gt; 修改主题文件 /source/css/_custom.styl对应行： 1$ff-body = HarmonyOS_Regular 修改主题配置文件style/font-family： 123body: HarmonyOS_Regular喜欢粗一点的可以：body: sHarmonyOS_Medium 添加背景动态线条效果在/layout/layout.ejs 的&lt;body&gt;里添加代码 123&lt;script type=&quot;text/javascript&quot; color=&quot;220,220,220&quot; opacity=&#x27;0.7&#x27; zIndex=&quot;-2&quot; count=&quot;200&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt; color：线条颜色(R,G,B)，默认：(0,0,0) opacity：线条透明度(0~1)，默认：0.5 zIndex：用于控制所在层的位置，默认：-1 count：线条总数量，默认：150","tags":["hexo"],"categories":["踩坑"]},{"title":"搭博客不完整实录1","path":"/2023/02/24/230224 搭博客不完整实录1/","content":"我随便记记，你随便看看 一、搭建前的准备 github新建仓库，命名为自己的名字.github.io Initialize那里Add.gitgnore template:Node 安装Node.js： http://nodejs.cn/download/ 安装Git：https://git-scm.com/ 安装cnpm：换源 1234$ npm install -g cnpm --registry=https://registry.npm.taobao.org检查cnmp:$ cnmp -v输出版本号即安装成功 二、安装hexo和搭建博客hexo中文文档 安装hexo-cli 1npm install -g hexo-cli 一开始在git上下载了一个不靠谱的hexo-cli包，里面只有一个压缩包，手动解压之后发现它的bin目录下居然没有hexo.cmd的文件😢！！！后来换npm重新下载了一个。 hexo网页配置 然后把hexo.cmd添加到环境变量里，再hexo init 另外，就是在终端输入hexo，有INFO字样的时候才说明配置成功 配置完成后找一个位置 123hexo init (初始化博客)hexo init blog (会在对应文件夹下面生成blog包)nmp install (安装依赖到node_modules) ssh连接到GitHub这一步是让GitHub上生成的网页与hexo同步 cmd (win系统) 12ssh-keygen.execd .ssh/ 打开.ssh/id_rsa.pub 复制到github—settings—SSH and GPG keys 来添加密钥 生成网页 可以偷懒写简写噢 123hexo generate / hexo g 生成网站静态文件到默认设置的public文件夹hexo server / hexo s 启动本地服务器hexo deploy / hexo d 将生成的网站静态文件部署到设定的仓库 先输入前两条，结尾会有一个网址http://localhost:4000 （这个是本地的默认网页）(可用浏览器浏览) 因为 hexo d 默认上传master分支，而在GitHub默认main分支 所以在输入第三条hexo d命令前，先改一下。 还有settings-brances这里，如果是main的话也改成master 改完就直接hexo d✌ 别问为什么没有成功后的截图，问就是生成网站之后太兴奋了所以忘记了截 然后改改配置改改网址，之后输入网址之后就可以看到自己的博客了✌✌ 这个repo的地址在GitHub项目里 三、更换主题 找个喜欢的主题先，可以去hexo主题商店看看 可以用git clone将主题克隆到themes/里 1git clone 主题的仓库网址.git themes/主题名字 全局配置文件_config.yml里修改theme：新主题 在博客目录下新建主题配置文件_config.主题名.yml，然后把新下载的主题文件的配置文件复制进去 1hexo cl &amp; hexo g &amp; hexo s 再进入http://localhost:4000就可以看或更换完主题之后的效果 tip：每次运行hexo g 、hexo s之前可以用hexo clean清除一下缓存 不同的主题其实配置属性什么的还是有很多差异的，就各自找各自主题作者的说明文件还有源码好好磨一下好啦 四、其他问题放着其他问题是因为，我忘记这个问题出现在什么位置了 cmd提示找不到hexo-deployer-git的话，那就安装一个吧： 1npm install hexo-deployer-git --save","tags":["hexo"],"categories":["踩坑"]},{"title":"关于","path":"/about/index.html","content":"感谢相遇，不论结局 友链动态Modifier美丽废物Drunkbaby小酌一壶GhDemi今晚一定早睡2023 年 6 月 8 日HAPPY BIRTHDAY！2023 年 2 月 26 日时间线，测试完毕，over2023 年 2 月 20 日感谢相遇！"},{"title":"友链","path":"/friends/index.html","content":"感谢相遇，不论结局 Modifier美丽废物Drunkbaby小酌一壶GhDemi今晚一定早睡"},{"title":"便笺","path":"/notes/index.html","content":"动态随记收藏"},{"title":"朋友文章","path":"/friends/rss/index.html","content":""},{"title":"收藏","path":"/notes/collect/index.html","content":"GeoGebra数学"},{"title":"动态","path":"/notes/essay/index.html","content":"2023 年 6 月 8 日HAPPY BIRTHDAY！2023 年 2 月 26 日时间线，测试完毕，over2023 年 2 月 20 日感谢相遇！"},{"title":"漂流瓶","path":"/notes/essay/write.html","content":"存放一些我腐朽又溃烂的思想和灵魂 230604 标签评价最近有人问我感觉自己是属于理性的还是感性的，我当时直接就回复说我说不了，因为连我自己都不能断言自己是什么样的人。后来我们就这个话题谈论了一番，就整合了一些自己的观点。理性还是感性，我认为没有绝对的范畴，有的人更偏向感性，有的人更偏向理性，也有的人在这件事上理性这件事上感性。理性还是感性，可以说，这是一种人们给自己和他人贴上的标签或者评价。虽然从小到现在任何一个时期都被要求写着什么自我评价他人评价，但其实我并不喜欢写这些，一直觉得没必要给自己和他人设置那么多的评价和标签，这些词句堆砌出来的只是一个简单的形象轮廓，并不是我自己。我经历的所有，是没有办法用寥寥几个词几句话轻描淡写地说完的。再说词句的褒贬是相对的，它们是不能，或者说不足以概括我的。当然并不是说标签评价不能存在，只是至少不应该让这些束缚住自己。我是复杂的我，我可以有很多可能，我也没有义务做一年前，一天前，甚至是一分钟前的自己。我一直觉得人不能用自己不能决定的东西定义，比方说性别、相貌、家庭、国籍等，我听过太多这样评价，理智上我是不愿接受的，情感上有时却会被煽动。我知道很多刻板印象就是这么带来的，但没有办法让人们都保持理智冷静独立思考的能力，就算可以，但只要有人在的地方，矛盾分歧争议还是免不了的吧。或许最多期望可以少一点吧。所以如果说非要让我认真地去评价一个人，我更愿意用这个人做过的事，说过的话去评价。"},{"path":"/wiki/notes/index.html","content":"​—title:便笺layout:wikiwiki:Notessitemap:falsebreadcrumb:falseorder:0​— 该页面出去打工了，忙完就会回来了"}]